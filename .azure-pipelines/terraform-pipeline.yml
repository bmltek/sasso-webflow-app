name: 'Terraform Infrastructure'

parameters:
- name: createResourceGroup
  displayName: 'Create New Resource Group'
  type: boolean
  default: true
- name: environment
  displayName: 'Environment'
  type: string
  default: 'dev'
  values:
  - dev
  - staging
  - prod
- name: location
  displayName: 'Azure Region'
  type: string
  default: 'westeurope'
- name: aksNodeCount
  displayName: 'AKS Node Count'
  type: number
  default: 2

trigger: none

variables:
  - group: terraform-config
  - name: TF_WORKSPACE
    value: ${{ parameters.environment }}

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Deploy
  displayName: 'Deploy Infrastructure'
  jobs:
  - job: Deploy
    displayName: 'Terraform Deployment'
    steps:
    - task: TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: '1.5.7'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        backendServiceArm: '$(AZURE_SUBSCRIPTION)'
        backendAzureRmResourceGroupName: 'sasso-tfstate-rg'
        backendAzureRmStorageAccountName: 'tfstat56eterraform45'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: '${{ parameters.environment }}.terraform.tfstate'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        commandOptions: '-var="create_resource_group=${{ lower(parameters.createResourceGroup) }}" -var="environment=${{ parameters.environment }}" -var="location=${{ parameters.location }}" -var="node_count=${{ parameters.aksNodeCount }}" -out=$(Build.ArtifactStagingDirectory)/tfplan'
        environmentServiceNameAzureRM: '$(AZURE_SUBSCRIPTION)'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        commandOptions: '$(Build.ArtifactStagingDirectory)/tfplan'
        environmentServiceNameAzureRM: '$(AZURE_SUBSCRIPTION)'
